//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Erwine.Leonard.T.RexT {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class RegexPatterns {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RegexPatterns() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Erwine.Leonard.T.RexT.RegexPatterns", typeof(RegexPatterns).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (?(?= &quot; ))
        ///	(?# Starts with quote )
        ///	(?&lt;openQuote&gt; &quot; )
        ///	(
        ///		(?(?= &quot;))
        ///			&quot;&quot;
        ///		|
        ///			[^&quot;]+
        ///		)
        ///	)*
        ///	(?&lt;closeQuote&gt; &quot; (?= ($|[^&quot;]) ))
        ///|
        ///	(?# Does not start with quote)
        ///	[^\r\n&quot;,]*
        ///)
        ///(?(?= ,)
        ///	(?&lt;endCol&gt; , )
        ///|
        ///	(?&lt;endLine (\r\n?|\n|$) )
        ///).
        /// </summary>
        internal static string AltTokenizeCsv {
            get {
                return ResourceManager.GetString("AltTokenizeCsv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (?&lt;p&gt;
        ///	(
        ///		((?(?=\\).|[^\[\(\\]+))*
        ///		(
        ///			\[
        ///			((?(?=\\).|[^\]\\]+))*
        ///			\]?
        ///		)?
        ///	)+
        ///)?
        ///(?&lt;g&gt;
        ///	(?&apos;ob&apos; \( )
        ///	[^\\\(\)\[]*
        ///	(
        ///		(?(?= \\ )
        ///			.
        ///		|
        ///			(?(?= \[ )
        ///				\[
        ///				((?(?=\\).|[^\]\\]+))*
        ///				\]?
        ///			|
        ///				(?(?= \( )
        ///					(?&apos;ob&apos; \( )
        ///				|
        ///					(?&apos;cb-ob&apos; \) )
        ///				)
        ///			)
        ///		)
        ///	)*
        ///).
        /// </summary>
        internal static string RegexGroupParse {
            get {
                return ResourceManager.GetString("RegexGroupParse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (?#
        ///	Group &quot;f&quot; indicates that a full column value was retrieved.
        ///	Group &quot;p&quot; indicates that the column was not terminated - probably continues to next line.
        ///	Group &quot;r&quot;: indicates that the last column - or row - was properly terminated.
        ///)
        ///(?(?= &quot; )
        ///	(?: &quot; )
        ///	(?(?= [^&quot;]* (&quot;&quot;[^&quot;]*)* &quot; (,|\r\n?|\n|$) )
        ///		(?&lt;f&gt; [^&quot;]* (?: &quot;&quot;[^&quot;]*)* )
        ///		(?: &quot; (?(?= , ) , | (?&lt;r&gt; (\r\n?|\n)? ) ) )
        ///	|
        ///		(?&lt;p&gt; [^&quot;]* (?: &quot;&quot;[^&quot;]*)* )
        ///		(?: &quot; )?
        ///	)
        ///|
        ///	(?(?= [^&quot;,\r\n]* &quot; )
        ///		(?&lt;p&gt; [^&quot;,\r\n]* )
        ///	|
        ///		(?&lt;f&gt;
        ///			(?(?&lt;= (^|,) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TokenizeCsv {
            get {
                return ResourceManager.GetString("TokenizeCsv", resourceCulture);
            }
        }
    }
}
